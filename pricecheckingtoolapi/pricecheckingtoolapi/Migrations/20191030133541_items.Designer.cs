// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pricecheckingtoolapi.Db;

namespace pricecheckingtoolapi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20191030133541_items")]
    partial class items
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("pricecheckingtoolapi.Models.Party", b =>
                {
                    b.Property<int>("partyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("partyId");

                    b.ToTable("Partys");
                });

            modelBuilder.Entity("pricecheckingtoolapi.Models.PartyUser", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<int>("partyId")
                        .HasColumnType("int");

                    b.HasKey("userId", "partyId");

                    b.HasIndex("partyId");

                    b.ToTable("PartyUser");
                });

            modelBuilder.Entity("pricecheckingtoolapi.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("sessionId")
                        .HasColumnType("longtext");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("pricecheckingtoolapi.Models.PartyUser", b =>
                {
                    b.HasOne("pricecheckingtoolapi.Models.Party", "party")
                        .WithMany("partyUser")
                        .HasForeignKey("partyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pricecheckingtoolapi.Models.User", "user")
                        .WithMany("partyUser")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
